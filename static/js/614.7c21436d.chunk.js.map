{"version":3,"file":"static/js/614.7c21436d.chunk.js","mappings":"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","sources":["redux/Contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/contact-form/ContactForm.module.css?6abb","components/Contacts/contact-form/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/filter/Filter.module.css?79f4","components/Contacts/filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/contact-item/ContactListItem.module.css?810f","components/Contacts/contact-item/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/contact-list/ContactList.module.css?0f62","components/Contacts/contact-list/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/Contacts/container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/titles/Titles.module.css?1a0b","components/Contacts/titles/HeroTitle.jsx","components/Contacts/titles/SecondaryTitle.jsx","components/Contacts/titles/Loading.js","pages/ContactsPage.js"],"sourcesContent":["//////done !\nexport const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilterContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.filter(({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedNumber = number.toLowerCase();\n    return (\n      normalizedName.includes(normalizedFilter) ||\n      normalizedNumber.includes(normalizedFilter)\n    );\n  });\n  return result;\n};\n\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__jW2+H\",\"btn\":\"ContactForm_btn__y21Oj\",\"label\":\"ContactForm_label__QFDpC\",\"input\":\"ContactForm_input__JLCMu\"};","////done\nimport { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        <span className={styles.txt}>name</span>\n        <input\n          className={styles.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Franklin D. Roosevelt\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        <span className={styles.txt}>number</span>\n        <input\n          className={styles.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"111-22-33\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.btn} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nContactForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__xoyem\",\"input\":\"Filter_input__XCQUd\"};","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      <span className={styles.text}>find contacts by name</span>\n      <input\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__jM9j9\",\"btn\":\"ContactListItem_btn__ftnp4\"};","////done\n\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, onDeleteContact, id }) => {\n  return (\n    <>\n      <li className={styles.item}>\n        {`${name} : ${number}`}\n        <button className={styles.btn} onClick={() => onDeleteContact(id)}>\n          delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n  id: PropTypes.string,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__ZbMa+\"};","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport ContactListItem from '../contact-item/ContactListItem';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <ul className={styles.list}>\n          {contacts?.map(contact => (\n            <ContactListItem\n              className={styles.item}\n              key={nanoid()}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n              onDeleteContact={onDeleteContact}\n            />\n          ))}\n        </ul>\n      ) : (\n        <div>\n          <p className={styles.text}>your phonebook is empty</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      onDeleteContact: PropTypes.func,\n      id: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React from 'react';\nimport styles from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Titles_title__Zhbto\",\"secondary__title\":\"Titles_secondary__title__BxTfT\"};","import styles from './Titles.module.css';\n\nexport const HeroTitle = () => {\n  return <h1 className={styles.title}>phonebook</h1>;\n};\n","import styles from './Titles.module.css';\n\nexport const SecondaryTitle = () => {\n  return <h2 className={styles.secondary__title}>contacts</h2>;\n};\n","import styles from './Titles.module.css';\n\nexport const Loading = () => {\n  return <h2 className={styles.secondary__title}>...loading</h2>;\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n//////\nimport {\n  fetchContacts,\n  addContactFromApi,\n  deleteContactFromApi,\n} from '../redux/Contacts/operations';\n//////check\nimport {\n  getFilterContacts,\n  getContacts,\n  getState,\n} from 'redux/Contacts/selectors';\nimport { setFilter } from '../redux/Contacts/filterActions';\nimport { getFilter } from 'redux/Contacts/selectors';\n///////////\nimport Form from '../components/Contacts/contact-form/ContactForm';\nimport Filter from '../components/Contacts/filter/Filter';\nimport ContactList from '../components/Contacts/contact-list/ContactList';\nimport Container from '../components/Contacts/container/Container';\nimport { HeroTitle } from '../components/Contacts/titles/HeroTitle';\nimport { SecondaryTitle } from '../components/Contacts/titles/SecondaryTitle';\nimport { Loading } from '../components/Contacts/titles/Loading';\nimport styles from '../components/Contacts/contact-list/ContactList.module.css';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const { loading } = useSelector(getState);\n  const filter = useSelector(getFilter);\n  const filtredContacts = getFilterContacts(contacts, filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addContact = data => {\n    dispatch(addContactFromApi(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(deleteContactFromApi(id));\n  };\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <Container>\n      <HeroTitle />\n      <Form onSubmit={addContact} contacts={contacts} />\n      {/* <SecondaryTitle /> */}\n      {contacts.length > 0 ? (\n        <>\n          <SecondaryTitle /> <Filter value={filter} onChange={changeFilter} />\n        </>\n      ) : (\n        <div>\n          <p className={styles.text}>your phonebook is empty</p>\n        </div>\n      )}\n      {!loading && contacts.length > 0 && (\n        <ContactList\n          contacts={filtredContacts}\n          onDeleteContact={deleteContact}\n        />\n      )}\n      {loading && <Loading />}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","contacts","items","getState","loading","error","getFilter","filter","initialState","name","number","ContactForm","onSubmit","useState","state","setState","handleChange","event","currentTarget","value","className","styles","preventDefault","onChange","type","placeholder","pattern","title","required","defaultProps","onDeleteContact","id","onClick","length","map","contact","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","children","HeroTitle","SecondaryTitle","Loading","useSelector","filtredContacts","normalizedFilter","toLowerCase","normalizedName","normalizedNumber","includes","getFilterContacts","dispatch","useDispatch","useEffect","fetchContacts","data","addContactFromApi","target","setFilter","deleteContactFromApi"],"sourceRoot":""}